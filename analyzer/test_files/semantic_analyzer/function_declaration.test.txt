fn something(a int) {
    a
    {
        a
    }
}

fn unreachable() {
    return
    a := 2
}

fn opt() ? {}

fn thing() ?string {
	defer {
		opt()
	}
	return 'ok'
}

fn whoops() string {
    return println('hello')
}

fn number() int {
    return false
}

fn number2() {
    return 1
}

fn number3() int {
    return
}

struct Triangle {
	base   int
	height int
}

fn (t Triangle) area() {
	return t.base * t.height / 2
}

fn separate_name(name string) (string, string) {
    splitted := name.split(' ')
    return splitted[0]
}

fn separate_name2(name string) (string, string) {
    splitted := name.split(' ')
    return splitted[0], splitted[1], splitted[2]
}

fn separate_name3(name string) string {
    splitted := name.split(' ')
    return splitted[0], splitted[1], splitted[2]
}

fn separate_name4(name string) string {
    return separate_name('foo bar')
}

fn separate_name5(name string) (string, string) {
    return separate_name3('foo bar')
}

fn return_ref() &Triangle {
    return Triangle{100, 10}
}
---

(error "`a` evaluated but not used" [1,4]-[1,5])
(error "`a` evaluated but not used" [3,8]-[3,9])
(error "unreachable code" [9,4]-[9,10])
(error "opt() returns an option, so it should have either an `or {}` block, or `?` at the end" [16,2]-[16,7])
(error "`println('hello')` used as value" [22,4]-[22,27]) 
(error "cannot use `bool` as type `int` in return argument" [26,4]-[26,16])
(error "unexpected argument, current function does not return anything" [30,11]-[30,12])
(error "expected `int` argument" [34,4]-[34,10])
(error "unexpected argument, current function does not return anything" [43,8]-[43,29])
(error "expected 2 arguments, but got 1" [48,11]-[48,22])
(error "expected 2 arguments, but got 3" [53,11]-[53,48])
(error "expected 1 argument, but got 3" [58,11]-[58,48])
(error "cannot use `(string, string)` as type `string` in return argument" [62,4]-[62,35])
(error "expected 1 argument, but got 2" [62,11]-[62,35])
(error "expected 2 arguments, but got 1" [66,11]-[66,36])
(error "fn `return_ref` expects you to return a reference type `&Triangle`, but you are returning `Triangle` instead" [70,11]-[70,28])