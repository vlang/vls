# Derived from: https://github.com/vlang/v/blob/master/.github/workflows/binary_artifact.yml
name: Build and release pre-built binaries

# on:
#   push:
#     tags:
#       - 0.**

jobs:
  build-linux-x64:
    runs-on: ubuntu-20.04
    timeout-minutes: 30
    steps:
      - name: Checkout V
        uses: actions/checkout@v2
        with:
          repository: vlang/v
      - uses: actions/checkout@v2
        with:
          path: vls
      - name: Clone tree-sitter-v to ~/.vmodules/tree_sitter_v
        run: git clone --depth 1 https://github.com/nedpals/tree-sitter-v ~/.vmodules/tree_sitter_v
      - name: Build local v
        run: make -j4
      - name: Compile VLS
        run: ./v -prod -gc boehm -cflags -static -o vls_linux_x64 vls/cmd/vls
      - name: Create binary only artifact
        uses: actions/upload-artifact@v2
        with:
          name: linux_x64
          path: ./vls_linux_x64
  build-macos-x64:
    runs-on: macos-latest
    steps:
      - name: Checkout V
        uses: actions/checkout@v2
        with:
          repository: vlang/v
      - uses: actions/checkout@v2
        with:
          path: vls
      - name: Clone tree-sitter-v to ~/.vmodules/tree_sitter_v
        run: git clone --depth 1 https://github.com/nedpals/tree-sitter-v ~/.vmodules/tree_sitter_v
      - name: Build local v
        run: make -j4
      - name: Compile VLS
        run: ./v -prod -gc boehm -cflags -static -o vls_macos_x64 vls/cmd/vls
      - name: Create binary only artifact
        uses: actions/upload-artifact@v2
        with:
          name: macos_x64
          path: ./vls_macos_x64
  # build-windows:
  #   steps:
  #     - uses: actions/checkout@v1
  #     - uses: msys2/setup-msys2@v2
  #     - name: Compile
  #       run: |
  #         .\make.bat
  #         .\v.exe cmd\tools\vup.v
  #         .\v.exe cmd\tools\vdoctor.v
  #     - name: Create artifact
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: windows
  #         path: |
  #           .
  #           ./cmd/tools/vup.exe
  #           ./cmd/tools/vdoctor.exe
  #           !./.git
  #           !./vc
  #           !./v_old.exe
  #     - name: Create binary only artifact
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: windows-binary
  #         path: ./v.exe
  build-windows-x64:
    runs-on: ubuntu-20.04
    timeout-minutes: 30
    steps:
      - name: Set up MinGW
        uses: egor-tensin/setup-mingw@v2
        with:
          platform: x64
      - name: Checkout V
        uses: actions/checkout@v2
        with:
          repository: vlang/v
      - uses: actions/checkout@v2
        with:
          path: vls
      - name: Clone tree-sitter-v to ~/.vmodules/tree_sitter_v
        run: git clone --depth 1 https://github.com/nedpals/tree-sitter-v ~/.vmodules/tree_sitter_v
      - name: Build local v
        run: make -j4
      - name: Cross-compile VLS to Windows
        run: ./v -os windows -gc boehm -cflags -static -o vls_win_x64.exe vls/cmd/vls
      - name: Create binary only artifact
        uses: actions/upload-artifact@v2
        with:
          name: windows_x64
          path: ./vls_win_x64.exe

  release:
    name: Create Github Release
    needs: [build-linux-x64, build-windows-x64, build-macos-x64]
    runs-on: ubuntu-20.04
    steps:
      - name: Get short tag name
        uses: jungwinter/split@v1
        id: split
        with:
          msg: ${{ github.ref }}
          seperator: /
      - name: Create Release
        id: create_release
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ steps.split.outputs._2 }}
          name: ${{ steps.split.outputs._2 }}
          commit: ${{ github.sha }}
          draft: false
          prerelease: false

  publish:
    needs: [release]
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        filename: [vls_linux_x64, vls_macos_x64, vls_windows_x64.exe]
        version: [linux_x64, macos_x64, windows_x64]
    steps:
      - uses: actions/checkout@v1
      - name: Fetch artifacts
        uses: actions/download-artifact@v1
        with:
          name: ${{ matrix.version }}
          path: ./${{ matrix.version }}
      - name: Get short tag name
        uses: jungwinter/split@v1
        id: split
        with:
          msg: ${{ github.ref }}
          seperator: /
      - name: Get release
        id: get_release_info
        uses: leahlundqvist/get-release@v1.3.1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          tag_name: ${{ steps.split.outputs._2 }}
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release_info.outputs.upload_url }}
          asset_path: ./${{ matrix.version }}/${{ matrix.filename }}
          asset_name: vls_${{ matrix.filename }}
          asset_content_type: application/octet-stream
